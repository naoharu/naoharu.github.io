<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on 順道制勝</title>
    <link>https://naoharu.github.io/tags/linux/index.xml</link>
    <description>Recent content in Linux on 順道制勝</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; &lt;a href=&#34;https://twitter.com/naoharu&#34;&gt;Naoharu SASAKI&lt;/a&gt; 2017</copyright>
    <atom:link href="https://naoharu.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CVE-2015-0235 glibc: __nss_hostname_digits_dots() heap-based buffer overflow</title>
      <link>https://naoharu.github.io/archives/11754</link>
      <pubDate>Wed, 28 Jan 2015 05:02:27 +0000</pubDate>
      
      <guid>https://naoharu.github.io/archives/11754</guid>
      <description>&lt;p&gt;またスゴいの出たね～。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-0235&#34;&gt;CVE-2015-0235 glibc: __nss_hostname_digits_dots() heap-based buffer overflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;順道制勝もバッチリ対象内！もう日本でもCentOSの脆弱性対応版がyumで配布され始めてるので、&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yum update glibc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;でOK。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>TLS heartbeat read overrun (CVE-2014-0160)</title>
      <link>https://naoharu.github.io/archives/11136</link>
      <pubDate>Thu, 10 Apr 2014 14:05:04 +0000</pubDate>
      
      <guid>https://naoharu.github.io/archives/11136</guid>
      <description>&lt;p&gt;なんかもうスゴい焦ってdefenceless.orgのsshの鍵を新しく作成してしまったけど、よくよく考えるとssh関係ないし！&lt;/p&gt;

&lt;p&gt;まぁでも世の中のエンジニアで頑張った人は多いのではなかろうか。。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.kb.cert.org/vuls/id/720951&#34;&gt;CVE-2014-0160&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;しかも、攻撃された痕跡が残らないってのがイラやしいよな〜。&lt;/p&gt;

&lt;p&gt;安全側に倒すなら、どんだけ早くパッチ当てたとしても、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「メモリ内の情報が流出した。」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;と仮定するしかないものね。まぁこの辺はコストと合わせて判断するのでしょう。。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>emacsのバッファ</title>
      <link>https://naoharu.github.io/archives/8549</link>
      <pubDate>Fri, 29 Jan 2010 09:40:39 +0000</pubDate>
      
      <guid>https://naoharu.github.io/archives/8549</guid>
      <description>&lt;p&gt;講座の後輩に、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「emacsのバッファってなんですか？」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;って聞かれた。面倒だから、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;「いや〜、俺vi派だから、よくわかんね〜わっ・・・。」&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;って嘘つこうと思ったけど、まぁ可愛い若者がemacsにハマろうとしてるんだから、逃さない手は無いということで、教えよう！と思うも、いざ体系的に教えようと思うと難しい。。。てか、俺自身emacsなんて誰からも教わったことなく、勝手に独学で身に付けたものだから、教えられねーし！！編集中ウィンドウでもなければ、ファイルそのものでもない、、、謎の「バッファ」。「バッファ」ってネットで調べると、&lt;a href=&#34;http://e-words.jp/w/E38390E38383E38395E382A1.html&#34;&gt;処理速度や転送速度の差を補うためにデータを一時的に保存しておく記憶装置や記憶領域&lt;/a&gt;、余計分かんねーよ！&lt;/p&gt;

&lt;p&gt;とりあえず実践編ってことで、俺スペシャルemacsトレーニングメニューで課題だしときました。&lt;/p&gt;

&lt;p&gt;あと、その子も俺と同様にMac使いなんだけど、Macでemacs使うならCommandキーをMetaに割り当てると便利！ってのに今頃気がついた。ってかMeta系はM-xぐらいしか使わないから、あんまり気にならなかったんだけど、後輩が不便そうに使ってて、なんか無いかな〜？と思って探ったら発見＆意外と自分も快適になりました。。。&lt;/p&gt;

&lt;p&gt;[code lang=&amp;#8221;c&amp;#8221;]&lt;/p&gt;

&lt;p&gt;(require &amp;#8216;mac-key-mode)&lt;/p&gt;

&lt;p&gt;(add-hook &amp;#8216;mac-key-mode-hook&lt;/p&gt;

&lt;p&gt;(lambda()&lt;/p&gt;

&lt;p&gt;(interactive)&lt;/p&gt;

&lt;p&gt;(if mac-key-mode&lt;/p&gt;

&lt;p&gt;(setq mac-option-modifier &amp;#8216;meta)&lt;/p&gt;

&lt;p&gt;(setq mac-option-modifier nil)&lt;/p&gt;

&lt;p&gt;)))&lt;/p&gt;

&lt;p&gt;[/code]&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>trac&#43;svnでプロジェクト管理（install編）</title>
      <link>https://naoharu.github.io/archives/7826</link>
      <pubDate>Mon, 31 Aug 2009 02:27:07 +0000</pubDate>
      
      <guid>https://naoharu.github.io/archives/7826</guid>
      <description>&lt;p&gt;プロジェクト管理ツールを導入しましょうという提案がされたので、いろいろと調べて、どうやらtracでバグや担当者、進捗などを管理し、それと連携する形で、svnでソースコード管理（誰が最後に触ったか）などを管理するのが最近イケてる院生だということなので、さっそく導入を試みた。 まずはsvnをインストール、apacheから扱えるようにする。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;# yum install mod_dav_svn&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;（途中の行程は後で書くとして、ハマったところをとりあえず先に書く）&lt;/p&gt;

&lt;p&gt;設定がすんだので、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://SERVER/svn/project&#34;&gt;http://SERVER/svn/project&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;にアクセス、すると、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ExtractionError: Can&amp;#8217;t extract file(s) to egg cache&lt;/p&gt;

&lt;p&gt;The following error occurred while trying to extract file(s) to the Python egg&lt;/p&gt;

&lt;p&gt;cache:&lt;/p&gt;

&lt;p&gt;[Errno 13] Permission denied: &amp;#8216;/home/svn/trac/.egg-cache&amp;#8217;&lt;/p&gt;

&lt;p&gt;The Python egg cache directory is currently set to:&lt;/p&gt;

&lt;p&gt;/home/svn/trac/.egg-cache&lt;/p&gt;

&lt;p&gt;Perhaps your account does not have write access to this directory? You can&lt;/p&gt;

&lt;p&gt;change the cache directory by setting the PYTHON_EGG_CACHE environment&lt;/p&gt;

&lt;p&gt;variable to point to an accessible directory.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;と言われる。パーミッションを確認しようとするも、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;# ls -la&lt;/p&gt;

&lt;p&gt;total 13&lt;/p&gt;

&lt;p&gt;drwxr-xr-x 4 root root 4096 2009-08-31 10:57 .&lt;/p&gt;

&lt;p&gt;drwxr-xr-x 4 apache apache 4096 2009-08-31 10:37 ..&lt;/p&gt;

&lt;p&gt;drwxr-xr-x 9 apache apache 4096 2009-08-31 10:38 project&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;.egg-cacheというディレクトリすら無かったので、ほんと自分でもありえないテキトー具合だとは思うんだけど、&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;# mkdir .egg-cache&lt;/p&gt;

&lt;p&gt;# chown -R apache:apache .egg-cache&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とかしてみる。そして再度&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://SERVER/svn/project&#34;&gt;http://SERVER/svn/project&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;にアクセスすると、（たぶん）正常にtracにwebからアクセスできた。なんだったんだろう・・・。今は時間がないので、とりあえず書き残しておいて、あとで&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;PYTHON_EGG_CACHE&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;について調べてみよう。まぁそんなたいした話じゃあない雰囲気がでてるんだけども。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>.htaccess</title>
      <link>https://naoharu.github.io/archives/8988</link>
      <pubDate>Fri, 31 Oct 2008 12:50:48 +0000</pubDate>
      
      <guid>https://naoharu.github.io/archives/8988</guid>
      <description>&lt;p&gt;あるWebサーバーでサイトを作っていて、それを 他のWebサーバーに移転しなければならないことが先日あった。といっても、コンテンツの 移動はscpで、DocumentRoot以下をコピーするだけだと思っていた。しかし、Webページ自体は普通に移転できたんだけど、 なぜか認証関係がうまくいかない。&lt;span style=&#34;font-weight: bold&#34;&gt;&lt;/span&gt;&lt;code&gt;.htaccess&lt;/code&gt; も全部コピーしたはずなのに、と思ってたら移転先のapache側の設定をするのを忘れていた。デフォルトでは、&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.htaccess&lt;/code&gt; ファイルを読むことを試みさえしないんだった。前にもこれでつまづいた記憶があるなぁ。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;httpd.conf&lt;/code&gt; に、&lt;/p&gt;

&lt;pre class=&#34;hatena-super-pre&#34;&gt;&amp;lt;Directory /&amp;gt;
    Options
    AllowOverride All
&amp;lt;/Directory&amp;gt;&lt;/pre&gt;

&lt;p&gt;として、解決。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>